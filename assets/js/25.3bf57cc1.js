(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{311:function(t,a,s){"use strict";s.r(a);var r=s(14),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),a("h1",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("p",[t._v("用于存储一组有序的数据。数组中的每个元素都有一个唯一的索引，可以通过索引来访问数组中的元素。数组可以用来存储任何类型的数据，包括数字，字符串，对象等。在内存地址上，数组是一段连续的内存地址。\n🚧")]),t._v(" "),a("h2",{attrs:{id:"单向链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单向链表"}},[t._v("#")]),t._v(" 单向链表")]),t._v(" "),a("p",[t._v("单向链表是一种常见的链表数据结构，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针。在内存地址上，链表每个节点地址都是分散的。\n每个节点包含两部分：")]),t._v(" "),a("ul",[a("li",[t._v("数据域（Data：用于存储节点数据")]),t._v(" "),a("li",[t._v("指针域（Next）：指向下一个节点的指针\n🚧")])]),t._v(" "),a("h2",{attrs:{id:"双向链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双向链表"}},[t._v("#")]),t._v(" 双向链表")]),t._v(" "),a("p",[t._v("双向链表是一种链表数据结构，每个节点除了包含数据和指向下一个节点的指针外，还包含指向前一个节点的指针。")]),t._v(" "),a("p",[t._v("双向链表中的每个节点有三个部分：")]),t._v(" "),a("ol",[a("li",[t._v("数据域（Data）：用于存储节点的数据。")]),t._v(" "),a("li",[t._v("前驱指针域（Prev）：指向前一个节点的指针。")]),t._v(" "),a("li",[t._v("后继指针域（Next）：指向后一个节点的指针\n🚧")])]),t._v(" "),a("h2",{attrs:{id:"栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),a("p",[t._v("🚧")]),t._v(" "),a("h2",{attrs:{id:"队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),a("p",[t._v("🚧\n🚧")])])}),[],!1,null,null,null);a.default=v.exports}}]);